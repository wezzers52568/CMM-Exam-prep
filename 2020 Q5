import numpy as np

#PART A
print ('PART A:')
#define
g=9.81 
h1=1/2
h_max = 1
A_o = 0.01
#Bernoulli's Eqn:
V1 = np.sqrt(2*g*h1)
print ('\nV1:',V1)

#FLow rate:
Q=A_o*V1
print ('Q:',Q)

#Time for cylinder 1
d=2
r=d/2
A_c = np.pi*r**2
Vol1= A_c*h_max
t1 = Vol1/Q
print ('t1:',t1)

#Time for cylinder 2
t2 = t1*2
print ('\nt2:',t2)

# Find new flow rate Q2
Vol2 = Vol1
Q2 = Vol2/t2
print ('Q2:',Q2)

#fine new velocity 
V2 = Q2/A_o
print ('V2:',V2)

#fine h2 from velocity
h2 = ((Q2/A_o)**2/(2*g))
print ('h2:',h2)

#find s:
z=h2*2
b=1

from scipy import optimize
f = lambda s: np.pi*z*(r**2+(b+s*z)**2+r*(b+s*z))-Vol2
print('\nNewton raphson method solution 1:',optimize.newton(f,1))
